# -------------------------#
# ---Program by MiVainer---#
import emoji
import re
import aiofiles
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardRemove, FSInputFile, InputFile, BufferedInputFile
from aiogram.utils import markdown
from aiogram.enums import ChatAction
import csv
import json



from keyboards.for_questions import get_yes_no_kb

router = Router()  # [1]

@router.message(F.from_user.id.in_({457820697, 680365312}), Command("start", prefix="!/%"))  # [2] –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start, —Ç–æ–ª—å–∫–æ –æ—Ç –º–µ–Ω—è –∏ –°–∞–Ω–∏
async def cmd_start(message: Message):
    text = f"<b>–ü—Ä–∏–≤–µ—Ç {message.from_user.full_name}! –Ø –±–æ—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.</b>" #–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–µ–≥–∞–º–∏ HTML, —ç—Ç–æ –º—ã —É–∫–∞–∑–∞–ª–∏ –≤ —Ñ–∞–π–ª–µ bot_test.py
    url = "https://static21.tgcnt.ru/posts/_0/06/06bdace22a1652e8f154b114d403a260.jpg"
    await message.answer(
        f"{markdown.hide_link(url)}{text}\n–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏?", # –≤—Å—Ç–∞–≤–∏–ª –∫–∞—Ä—Ç–∏–Ω–∫—É, –∞ –∑–∞—Ç–µ–º —Å–ø–æ–π–ª–µ—Ä
        reply_markup=get_yes_no_kb() #–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ for_questions.py –≤—ã–≤–æ–¥—è—â–µ–π –∫–Ω–æ–ø–∫–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    )

# —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ [2]
@router.message(F.text.lower() == "–¥–∞")
async def answer_yes(message: Message):
    await message.answer(
        "–≠—Ç–æ –∑–¥–æ—Ä–æ–≤–æ!",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(F.text.lower() == "–Ω–µ—Ç")
async def answer_no(message: Message):
    await message.answer(
        "–ñ–∞–ª—å...",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(F.from_user.id.in_({457820697, 680365312}), Command("help", prefix="!/%")) # [3] –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
async def cmd_start(message: Message):
    await message.answer(
        "–ë–æ—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞–º",
    )


@router.message(F.from_user.id.in_({457820697, 680365312}), Command("base", prefix="!/%")) # –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É –∞–±–æ–Ω–µ–Ω—Ç–æ–≤
async def cmd_base(message: Message):
    text = f"{message.from_user.full_name}, –∑–∞–∫–∏–¥—ã–≤–∞–π –º–Ω–µ –±–∞–∑—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>csv</b> –±—Ä–∞—Ç–∏—à–∫–∞!üòâ" #–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–µ–≥–∞–º–∏ HTML, —ç—Ç–æ –º—ã —É–∫–∞–∑–∞–ª–∏ –≤ —Ñ–∞–π–ª–µ bot_test.py
    await message.answer(
        text = text
    )
# –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –±–æ—Ç–∞ (test.txt), –Ω–∞–ø—Ä–∏–º–µ—Ä –≤—ã—Å–ª–∞—Ç—å –∏–º–µ—é—â—É—é—Å—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é –±–∞–∑—É
@router.message(Command("file"))
async def handle_command_file(message: Message):
    await message.bot.send_chat_action(
        chat_id=message.chat.id,
        # action=ChatAction.TYPING,
        # action=ChatAction.UPLOAD_PHOTO,
        action=ChatAction.UPLOAD_DOCUMENT,
    )
    file_path = "/home/mihail/Bot_aio/pythonProject/baza/test.txt"
    await message.reply_document(
        document=FSInputFile(
            path=file_path,
            filename="test.txt",
        ),
    )

# —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é –¥–∏—Ä—Ä–µ–∫—Ç–æ—Ä–∏—é /baza, –∏ –ø–∞—Ä—Å–∏–Ω–≥ –±–∞–∑—ã
@router.message(F.document)
async def handle_document(message: Message):
    if message.document.mime_type == 'text/csv':
        file_id = message.document.file_id
        file_path = f"/home/mihail/Bot_aio/pythonProject/baza/testbd.csv"  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        file_obj = await message.bot.download(file_id)
        async with aiofiles.open(file_path, 'wb') as f:
            await f.write(file_obj.read())

            await message.bot.send_chat_action(
                chat_id=message.chat.id,
                action=ChatAction.UPLOAD_DOCUMENT,
            )

            await message.answer(text='–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –±—Ä–æ!ü´° –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É...ü§Ø')

            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ json –≤ —Å–ª–æ–≤–∞—Ä—å python
            with open("/home/mihail/Bot_aio/pythonProject/baza/post.json", "r", encoding="utf-8") as f:
                post_json = f.read()
                f.close()
            post = json.loads(post_json)
            a = (post["pack"])

            # –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ csv –±–∞–∑—ã
            with open("/home/mihail/Bot_aio/pythonProject/baza/testbd.csv", encoding="utf-8") as f:
                reader = csv.DictReader(f, delimiter=';')
                k = 0
                for row in reader:
                    k += 1
                    stre = re.sub('[^0-9]', '', row['Phone'])
                    a.append({"phone": f"{stre}",
                              "message": "–°—É–¥–∞—Ä—å, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞",
                              "link": "https://–µ—Ä–º–∞–∫.shop/"})

            baza = post

            # –∫—Ä–∞—Å–∏–≤–∞—è –∑–∞–ø–∏—Å—å –≤ json
            with open("/home/mihail/Bot_aio/pythonProject/baza/baza.json", "w", encoding="utf-8") as f:
                for chunk in json.JSONEncoder(ensure_ascii=False, indent=4).iterencode(baza):
                    f.write(chunk)

            await message.answer(
                text=f"–í—Å–µ–≥–æ –≤ –±–∞–∑–µ {k} –∑–∞–ø–∏—Å–µ–π, –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É —Ç–µ–±–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ <b>{k * 5}</b> –¥–µ—Ä–µ–≤—è–Ω–Ω—ã—Öü´£")





'''    file_id = message.document.file_id
    file_info = await message.bot.get_file(file_id)
    file_path = file_info.file_path
    downloaded_file = await message.bot.download_file(file_path)

    with open(f"/home/mihail/Bot_aio/pythonProject/baza/testbd.csv", "wb") as file:
        file.write(downloaded_file.read())
'''





    #file_name = message.document.file_name
    #my_file = open(file_name, 'w+')
    #my_file.close()

@router.message(F.from_user.id.in_({457820697, 680365312})) # [4] –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /code
async def handle_command_code(message: Message):
    text = emoji.emojize(f"–ê–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞ –∫–∞–∫–∞—è-—Ç–æ, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é üò∞")

    await message.answer(text=text)


'''@router.message() # [5] —ç—Ö–æ –æ—Ç–≤–µ—Ç
async def echo_message(message: Message):
    await message.answer( # –ø—Ä–æ—Å—å–±–∞ –ø–æ–¥–æ–∂–¥–∞—Ç—å
            text=f"<i>–°—É–¥–∞—Ä—å, –ø—Ä–æ—à—É –≤–∞—Å –æ–±–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ —è —Å–ø—Ä–∞–≤–ª—é—Å—å –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É...</i>",
    )
    try:
        #await message.copy_to(chat_id=message.chat.id) # –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–ø—Ü–∏–π –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
        await message.forward(chat_id=message.chat.id) # forward –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç –∫–æ–≥–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    except TypeError:
        await message.reply(text="Something new üôÇ")'''



